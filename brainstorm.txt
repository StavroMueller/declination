This should be a map game sortal like carmen san diego, where you try to find the guy
in a random location. 

We can have a right pane that says "Dossier" with all the information and items that you have currently
o
need some sory of clue generator engine, I don;t know how that can be done,. okay, so here's the process - 

we start out and the program randomly selects a location, whether from a csv or something else. then after that we can see that the dossier is randomly generated. This is the hard part - should the random generation be part of an object and used to determine other things in the game> dunno, but it would make for an interesting thing there . we'll see. Okay, so the buiggest question - should you keep an account? maybe not, maybe. this is a hard one - there could be hunts, and then prizes for the fastest person? dunno. That would require a new hosting service - amazon cloud maybe?


how do w get the core mechanic to work - more importantly, what is the core mechanic? Some sort of detective thing with findiing out WHERE the person is? clikcing is just too simple - so need o figure out how to make a good game mechanic...something that is compelling, what will be the limiting factor? Budge, I guess - expenses and travel for now. Need to start out small and build up something like money or reputation. Can use rep in lieu of money. so, what we have here is a modified adventure game mechanic. We need an inventory, items probablty, and things for them to interact wiht. Maube each merson wcould have an item that they drop and you can use that as a clue. This needs to be worked in with twitter or something, to make it more acive, that'd be neat. mthis is frustrating. Need to craete a where 

okay so we need to have the "souce" city, and the destination. 

so now we have the people that needs to gice hints and clues - how would the programming work? This depends on the ways the classes are set up - we can have people and then we can derive the two from that. The villain can be a person and the hint people can be people - but be careful not to get carried away in making this thing too complicated. 

could get the car to follow the path using point latlng to div pixel and doing a transform


this would require custom maps, uh oh

the rooms should be written in json

the play area should shange - there will be the map view and then the lcoation view. The template for this game should be sam and max

I like having a little messages area - this would be a good thing to have on this too.
could just get natives to make these, I guess. That would suck though

could do airplane travel for now, just to get started

Choose a home city

the room specific function should always check for the game mode first

talking to NPCs will add their info to a log - this will help people from forgetting what to do next. Maybe a hint system? That you can PAY for! A-ha! :P

what are the core parts of this game? In other words, what do I need barebones to have a functional game?
for the "first run", anyway

Dialog Freewrite:

How to make this work? I know there has to be some component of advancing forward the dialog - this will chiefely be by  click on the person and then on the mouth
to initiate it, AND THEN By timed events! This means that - person A will say something, the callback from settimeout will initiate the next item in the thing. Would recursion
be a good fit for this? it might, actually. We could have the settimeout call stuff...hmm...AH! we could build a stack of the one way converstation elements and then stop when there is a
choice in the dialog. Those choices will also be in a stack, and popped off with a removeDialog() option or something. Maybe the dialog should be a class wrapper around all of the stuff?
it would read in the dialog from dialogue js and handle responses and such, that way it is relatively simple to do the stepping. The first thing to test it with would be the testingford,
and no choices to begin with. So, shoudl there be a script for each interaction? seems like it should be. 

More Dialog Freewrite

So, the dialog seems to be more complicated, there needs to be a sort of tick function 0 thi is the easiest way to check if we are displaying at the right tim. This turns the code into a much more "gamey" format. however, thoiugh this should be okay. We swould have an update interval, something like500 msec or something, though it can change. Then we could still jave the time intervals in the data structiure dfrot hte dialog, and we would use some math to check if it the correct time to dipaya the diaog yet. This could be done with modulus I think, so the end result would be something like:

Declination.ui.dialogInterval = setInterval(timeTick, interval);

function timeTick() {
    //check to see 



}

Domingo Brainstorm 1: (Feb 7)
-Decided to use 2d track system like in double fine host master game deux
-Decided to use dialogue js library instead of own coded solution

Here's a list:
	-Some sort of "Intro cinematic"
    -Rooms:
        -Should probably have a scaling factor associated to adjust the picture
    	-3 minimum
        -Specific art style
        -These rooms should:
        	-Hold items
            -Be switched to when a position on the map is reached
        -Be related to each other via a two dimensional array. 
    -Interactables:
    	-Should be used to solve puzzles, but not too much
        -Should consist of:
        	-Items used to solve puzzles
            -NPCs that have dialogue
        -Should be used to solve puzzles
        -Items should:
        	-Be picked up and put into an inventory
            -Be able to be combined
        -NPCs should: 
        	-Provide entertainment
            -Provide valuable information
            -Have two animated images:
            	-An idle animation
                -A talking animation
            -The ONLY distinction between an npx and an item will be the on talk event. Everything else will be the same. There will
             be seperate dialog libraries, but that's about it.
            -Each character could be stored in JSON, and that would be fed in to generic functions on the entities themselves. 
            -Have DIALOG, that should:
                -Be stored in some dynamic structure
                -on the DIALOG...
                    -need to come up with some sort of timing mechanic. something that allows for short and long pauses.
                     hopefully just custom functions - but this might be more complicated, with setTimeout() and such. it would be cool for the dialog to to have
                     the ability to pause built in.
        -On hover, there should be a sort of update of the UI to show which item the user is hovering over.
        -They should interact with each other. This means that you can "choose" one from inventory and apply it to another interactable
         and have something happen.
         	-How could we do this? Let's see...you will of course have a listener on each item in the inventory, and every item is part of an item class. (.inventoryItem or something). 
             you could then have a click listener on these that attaches the image to the mouse for the user to click on another item. 
             -We should only have non-inventory combinations for now (eg - dragging from inventory to playing field and combining there
             
    -The map:
    	-Should be a way to get between rooms?
        -Do we even need this
        -I don't know
        -It's actually good justification for there being no "avatar" of the player
        -Should be there - each location should just be horrendous stereotypes
        -Some Ideas:
        	-Alaska made entirely of ice and walruses
            -Switzerland made entirely of watches and clocks
            -Texas - trucks and cowboy hats
            -France - everybody mentions bread cheese and wine
    -The UI
    	-There should be some way of choosing the way to interact - probably in a full throttle esque popup
        	-The item itself could be zoomed in to the screen! And we could choose text to do stuff with it
            	-this means that the default will always be look at? hm, this may present issues when looking at people. We could have it only for uitems though. 
                -is this the right way to go? a simple popup would be much less complicated to implement, but the other method would "evolve" the mechanic a bit, though
                 maybe for the worse.
                -This would also ruin the opportunity for any sort of funny interactions when talking to an object
            -We could have a little animation on objects when they are hovered, and the interface pop up when clicked. This may be the best way to go - FOR NOW!
            -So for now it's settled - the fancy animation thing would be awesome, but too much for now. Maybe. I still like it. Maybe I'll try both.
            -So, for the popup:
            	-When the item is clicked, the event will fire and pass the method the entity - something like Declination.game.clicked(this), probably.
                -Was thinking about making the images changing on hover - I think we shouldn't look at this because tablets can't hover.
            -All the interaction options:
            	-take
                -look
                -use
                -talk
            -The ui should go away whenever an interaction option is chosen.
      
                
                
 NPC Ideas:
 	-A guy whos only dialogue is placeholder text,resulting in funny nonsensical things...
    -A stats guy





